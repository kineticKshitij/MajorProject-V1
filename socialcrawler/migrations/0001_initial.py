# Generated by Django 5.2.6 on 2025-10-03 14:35

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('googledorks', '0002_entitytype_googledork_entity_placeholders_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CrawlJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('platform', models.CharField(choices=[('twitter', 'Twitter/X'), ('linkedin', 'LinkedIn'), ('instagram', 'Instagram'), ('facebook', 'Facebook'), ('github', 'GitHub'), ('reddit', 'Reddit'), ('tiktok', 'TikTok'), ('youtube', 'YouTube')], max_length=20)),
                ('target_username', models.CharField(help_text='Username or handle to crawl', max_length=255)),
                ('target_url', models.URLField(blank=True, help_text='Direct URL to profile')),
                ('crawl_posts', models.BooleanField(default=True, help_text="Crawl user's posts")),
                ('crawl_followers', models.BooleanField(default=False, help_text='Crawl followers list')),
                ('crawl_following', models.BooleanField(default=False, help_text='Crawl following list')),
                ('max_posts', models.IntegerField(default=100, help_text='Maximum posts to crawl')),
                ('max_followers', models.IntegerField(default=1000, help_text='Maximum followers to crawl')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress', models.IntegerField(default=0, help_text='Progress percentage (0-100)')),
                ('profiles_found', models.IntegerField(default=0)),
                ('posts_found', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawl_jobs', to='googledorks.entity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crawl_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CrawlSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('platform', models.CharField(choices=[('twitter', 'Twitter/X'), ('linkedin', 'LinkedIn'), ('instagram', 'Instagram'), ('facebook', 'Facebook'), ('github', 'GitHub'), ('reddit', 'Reddit'), ('tiktok', 'TikTok'), ('youtube', 'YouTube')], max_length=20)),
                ('target_username', models.CharField(max_length=255)),
                ('frequency', models.CharField(choices=[('hourly', 'Every Hour'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('crawl_config', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawl_schedules', to='googledorks.entity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crawl_schedules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('platform', models.CharField(choices=[('twitter', 'Twitter/X'), ('linkedin', 'LinkedIn'), ('instagram', 'Instagram'), ('facebook', 'Facebook'), ('github', 'GitHub'), ('reddit', 'Reddit'), ('tiktok', 'TikTok'), ('youtube', 'YouTube')], max_length=20)),
                ('username', models.CharField(db_index=True, max_length=255)),
                ('user_id', models.CharField(blank=True, help_text='Platform-specific user ID', max_length=255)),
                ('profile_url', models.URLField()),
                ('display_name', models.CharField(blank=True, max_length=255)),
                ('bio', models.TextField(blank=True)),
                ('avatar_url', models.URLField(blank=True)),
                ('banner_url', models.URLField(blank=True)),
                ('followers_count', models.IntegerField(default=0)),
                ('following_count', models.IntegerField(default=0)),
                ('posts_count', models.IntegerField(default=0)),
                ('verified', models.BooleanField(default=False)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('website', models.URLField(blank=True)),
                ('joined_date', models.DateField(blank=True, null=True)),
                ('crawled_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('raw_data', models.JSONField(blank=True, default=dict, help_text='Complete raw profile data')),
                ('crawl_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to='socialcrawler.crawljob')),
                ('entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='social_profiles', to='googledorks.entity')),
            ],
            options={
                'ordering': ['-crawled_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('post_id', models.CharField(db_index=True, help_text='Platform-specific post ID', max_length=255)),
                ('post_url', models.URLField()),
                ('content', models.TextField(blank=True)),
                ('media_urls', models.JSONField(blank=True, default=list, help_text='List of image/video URLs')),
                ('media_type', models.CharField(blank=True, help_text='photo, video, carousel, etc.', max_length=50)),
                ('likes_count', models.IntegerField(default=0)),
                ('comments_count', models.IntegerField(default=0)),
                ('shares_count', models.IntegerField(default=0)),
                ('views_count', models.IntegerField(default=0)),
                ('posted_at', models.DateTimeField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=10)),
                ('hashtags', models.JSONField(blank=True, default=list)),
                ('mentions', models.JSONField(blank=True, default=list)),
                ('sentiment', models.CharField(blank=True, help_text='positive, negative, neutral', max_length=20)),
                ('topics', models.JSONField(blank=True, default=list, help_text='Extracted topics/keywords')),
                ('crawled_at', models.DateTimeField(auto_now_add=True)),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('crawl_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='socialcrawler.crawljob')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='socialcrawler.socialprofile')),
            ],
            options={
                'ordering': ['-posted_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(db_index=True)),
                ('followers_count', models.IntegerField(default=0)),
                ('following_count', models.IntegerField(default=0)),
                ('posts_count', models.IntegerField(default=0)),
                ('avg_likes', models.FloatField(default=0)),
                ('avg_comments', models.FloatField(default=0)),
                ('avg_shares', models.FloatField(default=0)),
                ('engagement_rate', models.FloatField(default=0, help_text='Percentage')),
                ('posts_today', models.IntegerField(default=0)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='socialcrawler.socialprofile')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddIndex(
            model_name='crawljob',
            index=models.Index(fields=['user', 'status'], name='socialcrawl_user_id_6a89d8_idx'),
        ),
        migrations.AddIndex(
            model_name='crawljob',
            index=models.Index(fields=['platform', 'status'], name='socialcrawl_platfor_a8ecaf_idx'),
        ),
        migrations.AddIndex(
            model_name='crawljob',
            index=models.Index(fields=['created_at'], name='socialcrawl_created_0cbcd8_idx'),
        ),
        migrations.AddIndex(
            model_name='socialprofile',
            index=models.Index(fields=['platform', 'username'], name='socialcrawl_platfor_7fc758_idx'),
        ),
        migrations.AddIndex(
            model_name='socialprofile',
            index=models.Index(fields=['crawled_at'], name='socialcrawl_crawled_4dd516_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='socialprofile',
            unique_together={('platform', 'username', 'crawl_job')},
        ),
        migrations.AddIndex(
            model_name='socialpost',
            index=models.Index(fields=['posted_at'], name='socialcrawl_posted__7f8061_idx'),
        ),
        migrations.AddIndex(
            model_name='socialpost',
            index=models.Index(fields=['crawled_at'], name='socialcrawl_crawled_6b9efa_idx'),
        ),
        migrations.AddIndex(
            model_name='socialpost',
            index=models.Index(fields=['profile', 'posted_at'], name='socialcrawl_profile_bf4354_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='socialpost',
            unique_together={('post_id', 'crawl_job')},
        ),
        migrations.AddIndex(
            model_name='socialmetrics',
            index=models.Index(fields=['date'], name='socialcrawl_date_4afed9_idx'),
        ),
        migrations.AddIndex(
            model_name='socialmetrics',
            index=models.Index(fields=['profile', 'date'], name='socialcrawl_profile_851279_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='socialmetrics',
            unique_together={('profile', 'date')},
        ),
    ]
